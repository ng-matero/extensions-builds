{"version":3,"file":"mtxSelect.umd.js","sources":["ng://@ng-matero/extensions/select/templates.directive.ts","ng://@ng-matero/extensions/select/select.component.ts","ng://@ng-matero/extensions/select/select.module.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ng-option-tmp]' })\nexport class MtxSelectOptionTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-optgroup-tmp]' })\nexport class MtxSelectOptgroupTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-label-tmp]' })\nexport class MtxSelectLabelTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-multi-label-tmp]' })\nexport class MtxSelectMultiLabelTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-header-tmp]' })\nexport class MtxSelectHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-footer-tmp]' })\nexport class MtxSelectFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-notfound-tmp]' })\nexport class MtxSelectNotFoundTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-typetosearch-tmp]' })\nexport class MtxSelectTypeToSearchTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-loadingtext-tmp]' })\nexport class MtxSelectLoadingTextTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-tag-tmp]' })\nexport class MtxSelectTagTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n\n@Directive({ selector: '[ng-loadingspinner-tmp]' })\nexport class MtxSelectLoadingSpinnerTemplateDirective {\n  constructor(public template: TemplateRef<any>) { }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  DoCheck,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  ElementRef,\n  ChangeDetectorRef,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  ContentChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\n\nimport {\n  MtxSelectOptionTemplateDirective,\n  MtxSelectLabelTemplateDirective,\n  MtxSelectHeaderTemplateDirective,\n  MtxSelectFooterTemplateDirective,\n  MtxSelectOptgroupTemplateDirective,\n  MtxSelectNotFoundTemplateDirective,\n  MtxSelectTypeToSearchTemplateDirective,\n  MtxSelectLoadingTextTemplateDirective,\n  MtxSelectMultiLabelTemplateDirective,\n  MtxSelectTagTemplateDirective,\n  MtxSelectLoadingSpinnerTemplateDirective\n} from './templates.directive';\n\nexport type CompareWithFn = (a: any, b: any) => boolean;\nexport type GroupValueFn = (key: string | object, children: any[]) => string | object;\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mtx-select',\n  exportAs: 'mtxSelect',\n  host: {\n    'class': 'mtx-select',\n    '[class.mtx-select-floating]': 'shouldLabelFloat',\n    '[attr.id]': 'id',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n  },\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{ provide: MatFormFieldControl, useExisting: MtxSelectComponent }],\n})\nexport class MtxSelectComponent\n  implements OnInit, OnDestroy, DoCheck, ControlValueAccessor, MatFormFieldControl<any> {\n  // MtxSelect custom templates\n  @ContentChild(MtxSelectOptionTemplateDirective, { read: TemplateRef }) optionTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectOptgroupTemplateDirective, { read: TemplateRef }) optgroupTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLabelTemplateDirective, { read: TemplateRef }) labelTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectMultiLabelTemplateDirective, { read: TemplateRef }) multiLabelTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectHeaderTemplateDirective, { read: TemplateRef }) headerTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectFooterTemplateDirective, { read: TemplateRef }) footerTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectNotFoundTemplateDirective, { read: TemplateRef }) notFoundTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectTypeToSearchTemplateDirective, { read: TemplateRef }) typeToSearchTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLoadingTextTemplateDirective, { read: TemplateRef }) loadingTextTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectTagTemplateDirective, { read: TemplateRef }) tagTemplate: TemplateRef<any>;\n  @ContentChild(MtxSelectLoadingSpinnerTemplateDirective, { read: TemplateRef }) loadingSpinnerTemplate: TemplateRef<any>;\n\n  /** MtxSelect options */\n  @Input() addTag: boolean | ((term: string) => any | Promise<any>) = false;\n  @Input() addTagText = 'Add item';\n  @Input() appearance = 'underline';\n  @Input() appendTo: string;\n  @Input() bindLabel: string;\n  @Input() bindValue: string;\n  @Input() closeOnSelect = true;\n  @Input() clearAllText = 'Clear all';\n  @Input() clearable = true;\n  @Input() clearOnBackspace = true;\n  @Input() compareWith: CompareWithFn; // TODO:\n  @Input() dropdownPosition: 'bottom' | 'top' | 'auto' = 'auto';\n  @Input() groupBy: () => void | string;\n  @Input() groupValue: GroupValueFn;\n  @Input() selectableGroup = false;\n  @Input() selectableGroupAsModel = true;\n  @Input() hideSelected = false;\n  @Input() items = [];\n  @Input() isOpen: boolean;\n  @Input() loading = false;\n  @Input() loadingText = 'Loading...';\n  @Input() labelForId = null;\n  @Input() markFirst = true;\n  @Input() maxSelectedItems: number;\n  @Input() multiple = false;\n  @Input() notFoundText = 'No items found';\n  @Input() searchable = true;\n  @Input() readonly = false;\n  @Input() searchFn = null;\n  @Input() searchWhileComposing = true;\n  @Input() clearSearchOnAdd = true;\n  @Input() selectOnTab = false;\n  @Input() trackByFn = null;\n  @Input() inputAttrs: { [key: string]: string } = {};\n  @Input() tabIndex: number;\n  @Input() openOnEnter = true;\n  @Input() minTermLength = 0;\n  @Input() keyDownFn = (_: KeyboardEvent) => true;\n  @Input() virtualScroll = false;\n  @Input() typeToSearchText = 'Type to search';\n  @Input() typeahead: Subject<string>;\n\n  @Output() blur = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() change = new EventEmitter();\n  @Output() open = new EventEmitter();\n  @Output() close = new EventEmitter();\n  @Output() search = new EventEmitter<{ term: string; items: any[] }>();\n  @Output() clear = new EventEmitter();\n  @Output() add = new EventEmitter();\n  @Output() remove = new EventEmitter();\n  @Output() scroll = new EventEmitter<{ start: number; end: number }>();\n  @Output() scrollToEnd = new EventEmitter();\n\n  /** Value of the select control. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    this._value = newValue;\n    this._onChange(newValue);\n    this.stateChanges.next();\n  }\n  private _value = null;\n\n  /** Implemented as part of MatFormFieldControl. */\n  readonly stateChanges: Subject<void> = new Subject<void>();\n\n  /** Unique id of the element. */\n  @Input()\n  get id(): string { return this._id; }\n  set id(value: string) {\n    this._id = value || this._uid;\n    this.stateChanges.next();\n  }\n  private _id: string;\n\n  /** Unique id for this input. */\n  private _uid = `mtx-select-${nextUniqueId++}`;\n\n  /** Placeholder to be shown if value is empty. */\n  @Input()\n  get placeholder(): string { return this._placeholder; }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  /** Whether the input is focused. */\n  get focused(): boolean { return this._focused; }\n  private _focused = false;\n\n  get empty(): boolean {\n    return !this.value || (Array.isArray(this.value) && this.value.length === 0);\n  }\n\n  get shouldLabelFloat(): boolean { return this.focused || !this.empty; }\n\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this.readonly = this._disabled;\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  errorState = false;\n\n  /** A name for this control that can be used by `mat-form-field`. */\n  controlType = 'mtx-select';\n\n  /** The aria-describedby attribute on the select for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** `View -> model callback called when value changes` */\n  _onChange: (value: any) => void = () => { };\n\n  /** `View -> model callback called when select has been touched` */\n  _onTouched = () => { };\n\n  constructor(\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n      if (this._focused && !origin) {\n        this._onTouched();\n      }\n      this._focused = !!origin;\n      this.stateChanges.next();\n    });\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() { }\n\n  ngDoCheck(): void {\n    if (this.ngControl) {\n      this.errorState = this.ngControl.invalid && this.ngControl.touched;\n      this.stateChanges.next();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /** Implemented as part of MatFormFieldControl. */\n  setDescribedByIds(ids: string[]) {\n    this._ariaDescribedby = ids.join(' ');\n  }\n\n  /** Implemented as part of MatFormFieldControl. */\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  /** Implemented as part of MatFormFieldControl. */\n  onContainerClick() { }\n\n  /**\n   * Sets the select's value. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param value New value to be written to the model.\n   */\n  writeValue(value: any): void {\n    this._value = value;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select's value\n   * changes from user input. Part of the ControlValueAccessor interface\n   * required to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the value changes.\n   */\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  /**\n   * Saves a callback function to be invoked when the select is blurred\n   * by the user. Part of the ControlValueAccessor interface required\n   * to integrate with Angular's core forms API.\n   *\n   * @param fn Callback to be triggered when the component has been touched.\n   */\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nimport { MtxSelectComponent } from './select.component';\nimport {\n  MtxSelectFooterTemplateDirective,\n  MtxSelectHeaderTemplateDirective,\n  MtxSelectLabelTemplateDirective,\n  MtxSelectLoadingSpinnerTemplateDirective,\n  MtxSelectLoadingTextTemplateDirective,\n  MtxSelectMultiLabelTemplateDirective,\n  MtxSelectNotFoundTemplateDirective,\n  MtxSelectOptgroupTemplateDirective,\n  MtxSelectOptionTemplateDirective,\n  MtxSelectTagTemplateDirective,\n  MtxSelectTypeToSearchTemplateDirective\n} from './templates.directive';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, NgSelectModule],\n  exports: [\n    MtxSelectComponent,\n    MtxSelectOptgroupTemplateDirective,\n    MtxSelectOptionTemplateDirective,\n    MtxSelectLabelTemplateDirective,\n    MtxSelectMultiLabelTemplateDirective,\n    MtxSelectHeaderTemplateDirective,\n    MtxSelectFooterTemplateDirective,\n    MtxSelectNotFoundTemplateDirective,\n    MtxSelectTypeToSearchTemplateDirective,\n    MtxSelectLoadingTextTemplateDirective,\n    MtxSelectTagTemplateDirective,\n    MtxSelectLoadingSpinnerTemplateDirective\n  ],\n  declarations: [\n    MtxSelectComponent,\n    MtxSelectOptgroupTemplateDirective,\n    MtxSelectOptionTemplateDirective,\n    MtxSelectLabelTemplateDirective,\n    MtxSelectMultiLabelTemplateDirective,\n    MtxSelectHeaderTemplateDirective,\n    MtxSelectFooterTemplateDirective,\n    MtxSelectNotFoundTemplateDirective,\n    MtxSelectTypeToSearchTemplateDirective,\n    MtxSelectLoadingTextTemplateDirective,\n    MtxSelectTagTemplateDirective,\n    MtxSelectLoadingSpinnerTemplateDirective,\n  ],\n})\nexport class MtxSelectModule { }\n"],"names":["Directive","TemplateRef","EventEmitter","Subject","coerceBooleanProperty","Component","ViewEncapsulation","ChangeDetectionStrategy","MatFormFieldControl","FocusMonitor","ElementRef","ChangeDetectorRef","NgControl","Optional","Self","ContentChild","Input","Output","NgModule","CommonModule","FormsModule","ReactiveFormsModule","NgSelectModule"],"mappings":";;;;;;;;;;;;QAIE,0CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDA,cAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;oBAFtBC,gBAAW;;QAK/B,uCAAC;KAHD,IAGC;;;QADa,oDAAiC;;;QAK7C,4CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE;;;;oBAPxBC,gBAAW;;QAU/B,yCAAC;KAHD,IAGC;;;QADa,sDAAiC;;;QAK7C,yCAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE;;;;oBAZrBC,gBAAW;;QAe/B,sCAAC;KAHD,IAGC;;;QADa,mDAAiC;;;QAK7C,8CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,sBAAsB,EAAE;;;;oBAjB3BC,gBAAW;;QAoB/B,2CAAC;KAHD,IAGC;;;QADa,wDAAiC;;;QAK7C,0CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;oBAtBtBC,gBAAW;;QAyB/B,uCAAC;KAHD,IAGC;;;QADa,oDAAiC;;;QAK7C,0CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,iBAAiB,EAAE;;;;oBA3BtBC,gBAAW;;QA8B/B,uCAAC;KAHD,IAGC;;;QADa,oDAAiC;;;QAK7C,4CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE;;;;oBAhCxBC,gBAAW;;QAmC/B,yCAAC;KAHD,IAGC;;;QADa,sDAAiC;;;QAK7C,gDAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,uBAAuB,EAAE;;;;oBArC5BC,gBAAW;;QAwC/B,6CAAC;KAHD,IAGC;;;QADa,0DAAiC;;;QAK7C,+CAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,sBAAsB,EAAE;;;;oBA1C3BC,gBAAW;;QA6C/B,4CAAC;KAHD,IAGC;;;QADa,yDAAiC;;;QAK7C,uCAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,cAAc,EAAE;;;;oBA/CnBC,gBAAW;;QAkD/B,oCAAC;KAHD,IAGC;;;QADa,iDAAiC;;;QAK7C,kDAAmB,QAA0B;YAA1B,aAAQ,GAAR,QAAQ,CAAkB;SAAK;;oBAFnDD,cAAS,SAAC,EAAE,QAAQ,EAAE,yBAAyB,EAAE;;;;oBApD9BC,gBAAW;;QAuD/B,+CAAC;KAHD,IAGC;;;QADa,4DAAiC;;;;;;;;;QCd3C,YAAY,GAAG,CAAC;;QAkKlB,4BACU,aAA2B,EAC3B,WAAoC,EACpC,kBAAqC,EAClB,SAAoB;YAJjD,iBAiBC;YAhBS,kBAAa,GAAb,aAAa,CAAc;YAC3B,gBAAW,GAAX,WAAW,CAAyB;YACpC,uBAAkB,GAAlB,kBAAkB,CAAmB;YAClB,cAAS,GAAT,SAAS,CAAW;;;;YArIxC,WAAM,GAAqD,KAAK,CAAC;YACjE,eAAU,GAAG,UAAU,CAAC;YACxB,eAAU,GAAG,WAAW,CAAC;YAIzB,kBAAa,GAAG,IAAI,CAAC;YACrB,iBAAY,GAAG,WAAW,CAAC;YAC3B,cAAS,GAAG,IAAI,CAAC;YACjB,qBAAgB,GAAG,IAAI,CAAC;;YAExB,qBAAgB,GAA8B,MAAM,CAAC;YAGrD,oBAAe,GAAG,KAAK,CAAC;YACxB,2BAAsB,GAAG,IAAI,CAAC;YAC9B,iBAAY,GAAG,KAAK,CAAC;YACrB,UAAK,GAAG,EAAE,CAAC;YAEX,YAAO,GAAG,KAAK,CAAC;YAChB,gBAAW,GAAG,YAAY,CAAC;YAC3B,eAAU,GAAG,IAAI,CAAC;YAClB,cAAS,GAAG,IAAI,CAAC;YAEjB,aAAQ,GAAG,KAAK,CAAC;YACjB,iBAAY,GAAG,gBAAgB,CAAC;YAChC,eAAU,GAAG,IAAI,CAAC;YAClB,aAAQ,GAAG,KAAK,CAAC;YACjB,aAAQ,GAAG,IAAI,CAAC;YAChB,yBAAoB,GAAG,IAAI,CAAC;YAC5B,qBAAgB,GAAG,IAAI,CAAC;YACxB,gBAAW,GAAG,KAAK,CAAC;YACpB,cAAS,GAAG,IAAI,CAAC;YACjB,eAAU,GAA8B,EAAE,CAAC;YAE3C,gBAAW,GAAG,IAAI,CAAC;YACnB,kBAAa,GAAG,CAAC,CAAC;YAClB,cAAS;;;;YAAG,UAAC,CAAgB,IAAK,OAAA,IAAI,GAAA,EAAC;YACvC,kBAAa,GAAG,KAAK,CAAC;YACtB,qBAAgB,GAAG,gBAAgB,CAAC;YAGnC,SAAI,GAAG,IAAIC,iBAAY,EAAE,CAAC;YAC1B,UAAK,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC3B,WAAM,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC5B,SAAI,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC1B,UAAK,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC3B,WAAM,GAAG,IAAIA,iBAAY,EAAkC,CAAC;YAC5D,UAAK,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC3B,QAAG,GAAG,IAAIA,iBAAY,EAAE,CAAC;YACzB,WAAM,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAC5B,WAAM,GAAG,IAAIA,iBAAY,EAAkC,CAAC;YAC5D,gBAAW,GAAG,IAAIA,iBAAY,EAAE,CAAC;YAUnC,WAAM,GAAG,IAAI,CAAC;;;;YAGb,iBAAY,GAAkB,IAAIC,YAAO,EAAQ,CAAC;;;;YAYnD,SAAI,GAAG,gBAAc,YAAY,EAAI,CAAC;YAatC,aAAQ,GAAG,KAAK,CAAC;YAcjB,cAAS,GAAG,KAAK,CAAC;YASlB,cAAS,GAAG,KAAK,CAAC;YAE1B,eAAU,GAAG,KAAK,CAAC;;;;YAGnB,gBAAW,GAAG,YAAY,CAAC;;;;YAM3B,cAAS;;;YAAyB,eAAS,EAAC;;;;YAG5C,eAAU;;;YAAG,eAAS,EAAC;YAQrB,aAAa,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,SAAS;;;;YAAC,UAAA,MAAM;gBACvD,IAAI,KAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,EAAE;oBAC5B,KAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;gBACD,KAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B,EAAC,CAAC;YAEH,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC1B,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;aACrC;SACF;QA3FD,sBACI,qCAAK;;;;;;YADT,cACmB,OAAO,IAAI,CAAC,MAAM,CAAC,EAAE;;;;;YACxC,UAAU,QAAa;gBACrB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACvB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACzB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;WALuC;QAYxC,sBACI,kCAAE;;;;;;YADN,cACmB,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;;;;;YACrC,UAAO,KAAa;gBAClB,IAAI,CAAC,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;gBAC9B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;WAJoC;QAWrC,sBACI,2CAAW;;;;;;YADf,cAC4B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;;;;;YACvD,UAAgB,KAAa;gBAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;WAJsD;QAQvD,sBAAI,uCAAO;;;;;;YAAX,cAAyB,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;;;WAAA;QAGhD,sBAAI,qCAAK;;;;YAAT;gBACE,OAAO,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;aAC9E;;;WAAA;QAED,sBAAI,gDAAgB;;;;YAApB,cAAkC,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;;WAAA;QAEvE,sBACI,wCAAQ;;;;YADZ,cAC0B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;YAClD,UAAa,KAAc;gBACzB,IAAI,CAAC,SAAS,GAAGC,8BAAqB,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;WAJiD;QAOlD,sBACI,wCAAQ;;;;YADZ,cAC0B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;YAClD,UAAa,KAAc;gBACzB,IAAI,CAAC,SAAS,GAAGA,8BAAqB,CAAC,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;gBAC/B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;;;WALiD;;;;QAyClD,qCAAQ;;;QAAR,eAAc;;;;QAEd,sCAAS;;;QAAT;YACE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;gBACnE,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;SACF;;;;QAED,wCAAW;;;QAAX;YACE,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACrD;;;;;;;QAGD,8CAAiB;;;;;QAAjB,UAAkB,GAAa;YAC7B,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvC;;;;;;;QAGD,6CAAgB;;;;;QAAhB,UAAiB,UAAmB;YAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;;;;;;QAGD,6CAAgB;;;;QAAhB,eAAsB;;;;;;;;;;;;;;QAQtB,uCAAU;;;;;;;QAAV,UAAW,KAAU;YACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;SACxC;;;;;;;;;;;;;;;;QASD,6CAAgB;;;;;;;;QAAhB,UAAiB,EAAO;YACtB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACrB;;;;;;;;;;;;;;;;QASD,8CAAiB;;;;;;;;QAAjB,UAAkB,EAAO;YACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;;oBA7OFC,cAAS,SAAC;wBACT,QAAQ,EAAE,YAAY;wBACtB,QAAQ,EAAE,WAAW;wBACrB,IAAI,EAAE;4BACJ,OAAO,EAAE,YAAY;4BACrB,6BAA6B,EAAE,kBAAkB;4BACjD,WAAW,EAAE,IAAI;4BACjB,yBAAyB,EAAE,0BAA0B;yBACtD;wBACD,23KAAsC;wBAEtC,aAAa,EAAEC,sBAAiB,CAAC,IAAI;wBACrC,eAAe,EAAEC,4BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE,CAAC,EAAE,OAAO,EAAEC,6BAAmB,EAAE,WAAW,EAAE,kBAAkB,EAAE,CAAC;;qBAC/E;;;;oBApCQC,iBAAY;oBAZnBC,eAAU;oBACVC,sBAAiB;oBAQYC,eAAS,uBA6LnCC,aAAQ,YAAIC,SAAI;;;qCAlJlBC,iBAAY,SAAC,gCAAgC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;uCACpEc,iBAAY,SAAC,kCAAkC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;oCACtEc,iBAAY,SAAC,+BAA+B,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;yCACnEc,iBAAY,SAAC,oCAAoC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;qCACxEc,iBAAY,SAAC,gCAAgC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;qCACpEc,iBAAY,SAAC,gCAAgC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;uCACpEc,iBAAY,SAAC,kCAAkC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;2CACtEc,iBAAY,SAAC,sCAAsC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;0CAC1Ec,iBAAY,SAAC,qCAAqC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;kCACzEc,iBAAY,SAAC,6BAA6B,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;6CACjEc,iBAAY,SAAC,wCAAwC,EAAE,EAAE,IAAI,EAAEd,gBAAW,EAAE;6BAG5Ee,UAAK;iCACLA,UAAK;iCACLA,UAAK;+BACLA,UAAK;gCACLA,UAAK;gCACLA,UAAK;oCACLA,UAAK;mCACLA,UAAK;gCACLA,UAAK;uCACLA,UAAK;kCACLA,UAAK;uCACLA,UAAK;8BACLA,UAAK;iCACLA,UAAK;sCACLA,UAAK;6CACLA,UAAK;mCACLA,UAAK;4BACLA,UAAK;6BACLA,UAAK;8BACLA,UAAK;kCACLA,UAAK;iCACLA,UAAK;gCACLA,UAAK;uCACLA,UAAK;+BACLA,UAAK;mCACLA,UAAK;iCACLA,UAAK;+BACLA,UAAK;+BACLA,UAAK;2CACLA,UAAK;uCACLA,UAAK;kCACLA,UAAK;gCACLA,UAAK;iCACLA,UAAK;+BACLA,UAAK;kCACLA,UAAK;oCACLA,UAAK;gCACLA,UAAK;oCACLA,UAAK;uCACLA,UAAK;gCACLA,UAAK;2BAELC,WAAM;4BACNA,WAAM;6BACNA,WAAM;2BACNA,WAAM;4BACNA,WAAM;6BACNA,WAAM;4BACNA,WAAM;0BACNA,WAAM;6BACNA,WAAM;6BACNA,WAAM;kCACNA,WAAM;4BAGND,UAAK;yBAaLA,UAAK;kCAYLA,UAAK;+BAkBLA,UAAK;+BAQLA,UAAK;;QAqGR,yBAAC;KA9OD,IA8OC;;;QA5NC,4CAAwG;;QACxG,8CAA4G;;QAC5G,2CAAsG;;QACtG,gDAAgH;;QAChH,4CAAwG;;QACxG,4CAAwG;;QACxG,8CAA4G;;QAC5G,kDAAoH;;QACpH,iDAAkH;;QAClH,yCAAkG;;QAClG,oDAAwH;;;;;QAGxH,oCAA0E;;QAC1E,wCAAiC;;QACjC,wCAAkC;;QAClC,sCAA0B;;QAC1B,uCAA2B;;QAC3B,uCAA2B;;QAC3B,2CAA8B;;QAC9B,0CAAoC;;QACpC,uCAA0B;;QAC1B,8CAAiC;;QACjC,yCAAoC;;QACpC,8CAA8D;;QAC9D,qCAAsC;;QACtC,wCAAkC;;QAClC,6CAAiC;;QACjC,oDAAuC;;QACvC,0CAA8B;;QAC9B,mCAAoB;;QACpB,oCAAyB;;QACzB,qCAAyB;;QACzB,yCAAoC;;QACpC,wCAA2B;;QAC3B,uCAA0B;;QAC1B,8CAAkC;;QAClC,sCAA0B;;QAC1B,0CAAyC;;QACzC,wCAA2B;;QAC3B,sCAA0B;;QAC1B,sCAAyB;;QACzB,kDAAqC;;QACrC,8CAAiC;;QACjC,yCAA6B;;QAC7B,uCAA0B;;QAC1B,wCAAoD;;QACpD,sCAA0B;;QAC1B,yCAA4B;;QAC5B,2CAA2B;;QAC3B,uCAAgD;;QAChD,2CAA+B;;QAC/B,8CAA6C;;QAC7C,uCAAoC;;QAEpC,kCAAoC;;QACpC,mCAAqC;;QACrC,oCAAsC;;QACtC,kCAAoC;;QACpC,mCAAqC;;QACrC,oCAAsE;;QACtE,mCAAqC;;QACrC,iCAAmC;;QACnC,oCAAsC;;QACtC,oCAAsE;;QACtE,yCAA2C;;;;;QAU3C,oCAAsB;;;;;QAGtB,0CAA2D;;;;;QAS3D,iCAAoB;;;;;;QAGpB,kCAA8C;;;;;QAS9C,0CAA6B;;;;;QAI7B,sCAAyB;;;;;QAczB,uCAA0B;;;;;QAS1B,uCAA0B;;QAE1B,wCAAmB;;;;;QAGnB,yCAA2B;;;;;QAG3B,8CAAyB;;;;;QAGzB,uCAA4C;;;;;QAG5C,wCAAuB;;;;;QAGrB,2CAAmC;;;;;QACnC,yCAA4C;;;;;QAC5C,gDAA6C;;QAC7C,uCAA+C;;;;;;;;;QCzLnD;SA+BgC;;oBA/B/BE,aAAQ,SAAC;wBACR,OAAO,EAAE,CAACC,mBAAY,EAAEC,iBAAW,EAAEC,yBAAmB,EAAEC,uBAAc,CAAC;wBACzE,OAAO,EAAE;4BACP,kBAAkB;4BAClB,kCAAkC;4BAClC,gCAAgC;4BAChC,+BAA+B;4BAC/B,oCAAoC;4BACpC,gCAAgC;4BAChC,gCAAgC;4BAChC,kCAAkC;4BAClC,sCAAsC;4BACtC,qCAAqC;4BACrC,6BAA6B;4BAC7B,wCAAwC;yBACzC;wBACD,YAAY,EAAE;4BACZ,kBAAkB;4BAClB,kCAAkC;4BAClC,gCAAgC;4BAChC,+BAA+B;4BAC/B,oCAAoC;4BACpC,gCAAgC;4BAChC,gCAAgC;4BAChC,kCAAkC;4BAClC,sCAAsC;4BACtC,qCAAqC;4BACrC,6BAA6B;4BAC7B,wCAAwC;yBACzC;qBACF;;QAC8B,sBAAC;KA/BhC;;;;;;;;;;;;;;;;;;;;;;;;"}